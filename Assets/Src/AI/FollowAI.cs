//------------------------------------------------------------------------------
// <auto-generated>
//     Denna kod har genererats av ett verktyg.
//     Körtidsversion:4.0.30319.34014
//
//     Ändringar i denna fil kan orsaka fel och kommer att förloras om
//     koden återgenereras.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;

public class FollowAI : Defensive
{
	private MonoBehaviour master=null;
	private float minDistance=999f;


	public override Action GetAction(Unit unit)
	{
		float temp=0f;
		MonoBehaviour target=null;
		Action retValue=base.GetAction(unit);
		if(retValue.movement!=null)
		{
			return retValue;
		}

		HashSet<Tile> possibleMoves=unit.GetReachableTiles();
		if (master==null)
		{
			HashSet<Unit> targets=UnitManager.Instance.GetUnitsByHostility(unit);


			foreach(Unit o in targets)
			{
				if(o.invisible)
				{
					continue;
				}
				float
					dx=unit.transform.position.x-o.transform.position.x,
					dy=unit.transform.position.y-o.transform.position.y;
				temp=dx*dx+dy*dy;
				if( temp<minDistance)
				{
					minDistance=temp;
					target=o;
				}
			}
			if(target == null){ // if we find no target to chase down
				return retValue;
			}
		}
		if (master!=null)
		{
			target=master;
		}
		minDistance=999f;
		temp=0f;
		foreach (Tile o in possibleMoves)
		{
			float
				dx =target.transform.position.x-o.transform.position.x,
				dy =target.transform.position.y-o.transform.position.y;
			
			temp=dx*dx+dy*dy;
			if (temp<minDistance)
			{
				minDistance=temp;
				retValue.movement=o;
			}
		}
		return retValue;
	}

	public void Follow(MonoBehaviour target)
	{
		master=target;
	}
}
