//------------------------------------------------------------------------------
// <auto-generated>
//     Denna kod har genererats av ett verktyg.
//     Körtidsversion:4.0.30319.34014
//
//     Ändringar i denna fil kan orsaka fel och kommer att förloras om
//     koden återgenereras.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

public class Charge : Passive
{
	theBuff _buff;
	int moves=0;
	Vector3 startPosition;
	
	public override string Name
	{
		get
		{
			return "Charge!";
		}
	}

	void Start () {
		_buff = new theBuff(this, GetComponent<Unit>());
		BuffManager.Instance.Add(_buff);
		startPosition = transform.position;
	}

	void Update()
	{
		//Unit u=GetComponent<Unit>();
		//moves=(int)(Math.Abs(startTile.transform.position.x-u.transform.position.x)+Math.Abs(startTile.transform.position.y-u.transform.position.y));
	}

	void UnitSelected(){
		//Unit u=GetComponent<Unit>();
		//Debug.Log(u + " was selected!");
		startPosition = transform.position; 
	}

	void UnitMoved(){
		//Unit u=GetComponent<Unit>();
		//Debug.Log(u + " moved!");
		moves=(int)(Math.Abs(startPosition.x-transform.position.x)+Math.Abs(startPosition.y-transform.position.y));

	}

	private class theBuff : Buff
	{
		Charge _host;
		Unit _hostUnit;

		public theBuff (Charge _host, Unit _hostUnit)
		{
			this._host = _host;
			this._hostUnit = _hostUnit;
		}
		

		public Stats Stats
		{
			get
			{
				return new Stats(new UnitMove(), 0, _host.moves, 0, 0, 0, 0);
			}
		}

		public bool Affects(Unit u)
		{
			return _hostUnit==u && UnitManager.Instance.IsItMyTurn(u);
		}
	}
}